{"version":3,"file":"static/js/134.4b0fcbb8.chunk.js","mappings":"sMAmFA,UA/Ee,WACb,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAWJ,EAAaK,IAAI,UAElCC,EAAAA,EAAAA,YAAU,WACJF,GAAUG,EAASH,EACxB,GAAE,CAACA,IAEJ,IAYMG,EAAW,SAAAC,GACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIzBA,EAAAA,EAAAA,IAAA,UAFkB,SAElB,YADmB,QACnB,oBAHe,mCAGf,kBAC6DD,IAC1DE,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIE,KACpBf,EAAcc,EAAQE,QACvB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,QACrB,GACJ,EAaD,OACE,iBAAKC,SAZc,SAAAC,GACnBA,EAAYC,iBACc,KAAtB1B,EAAW2B,QAIff,EAASZ,GA7Be,WACxB,GAAmB,KAAfA,EACF,OAAOM,EAAgB,CAAC,GAE1BA,EAAgB,CAAEsB,MAAO5B,GAC1B,CAyBC6B,GACA5B,EAAc,KALZ6B,MAAM,2GAMT,EAGC,oBAEE,6BACE,kBACEC,KAAK,OACLC,KAAK,aACLC,aAAa,MACbC,MAAOlC,EACPmC,WAAS,EACTC,YAAY,gBACZC,UAAQ,EACRC,SAnDe,SAAAC,GACrB,IAAQL,EAAUK,EAAMC,cAAhBN,MACRjC,EAAciC,EACf,KAkDK,mBAAQH,KAAK,SAAb,wBAEF,wBACG7B,EAAWuC,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMvC,GAAxC,SACGmC,EAAMK,kBAFFL,EAAME,GADI,QAU5B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchWord, setSearchWord] = useState('');\n  const [dataSearch, setDataSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const URLquery = searchParams.get('query');\n\n  useEffect(() => {\n    if (URLquery) runQuery(URLquery);\n  }, [URLquery]);\n\n  const onChangeHandel = event => {\n    const { value } = event.currentTarget;\n    setSearchWord(value);\n  };\n\n  const updateQueryString = () => {\n    if (searchWord === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: searchWord });\n  };\n\n  const runQuery = queryWord => {\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n    const apiKey = '6746b4dbb69b720741ecbdc7655d3557';\n    const typeQuery = 'search';\n    const media_type = 'movie';\n    axios\n      .get(`${typeQuery}/${media_type}?api_key=${apiKey}&query=${queryWord}`)\n      .then(res => {\n        const dataArr = res.data;\n        setDataSearch(dataArr.results);\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  };\n\n  const onSubmitForm = eventSubmit => {\n    eventSubmit.preventDefault();\n    if (searchWord.trim() === '') {\n      alert('Ведіть назву фільму');\n      return;\n    }\n    runQuery(searchWord);\n    updateQueryString();\n    setSearchWord('');\n  };\n\n  return (\n    <div onSubmit={onSubmitForm}>\n      Movies\n      <form>\n        <input\n          type=\"text\"\n          name=\"searchWord\"\n          autoComplete=\"off\"\n          value={searchWord}\n          autoFocus\n          placeholder=\"Search movies\"\n          required\n          onChange={onChangeHandel}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {dataSearch.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchWord","setSearchWord","dataSearch","setDataSearch","useSearchParams","searchParams","setSearchParams","location","useLocation","URLquery","get","useEffect","runQuery","queryWord","axios","then","res","dataArr","data","results","catch","error","console","message","onSubmit","eventSubmit","preventDefault","trim","query","updateQueryString","alert","type","name","autoComplete","value","autoFocus","placeholder","required","onChange","event","currentTarget","map","movie","to","id","state","from","original_title"],"sourceRoot":""}