{"version":3,"file":"static/js/736.cfce1adb.chunk.js","mappings":"6PAEaA,EAAgBC,EAAAA,GAAAA,IAAH,sBAEbC,EAAgBD,EAAAA,GAAAA,GAAH,wRAYbE,EAAgBF,EAAAA,GAAAA,GAAH,2OAObG,EAAeH,EAAAA,GAAAA,IAAH,+IAMZI,EAAiBJ,EAAAA,GAAAA,IAAH,+CAGdK,EAAgBL,EAAAA,GAAAA,GAAH,sBACbM,EAAgBN,EAAAA,GAAAA,EAAH,sBACbO,EAAiBP,EAAAA,GAAAA,GAAH,uC,SC4B3B,EAhDa,WACX,OAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAaH,EAAS,WACnBI,MAAK,SAAAC,GACJN,EAAaM,EAAIC,KAAKC,KACvB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,QACrB,GAEN,GAAE,CAACX,IAGJ,OACE,SAACZ,EAAD,UACGU,EAAUc,QACT,SAACtB,EAAD,UACGQ,EAAUe,KAAI,SAAAN,GAAI,OACjB,UAAChB,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAgBa,EAAKO,iBACrB,UAACnB,EAAD,0BAA4BY,EAAKQ,gBAElCR,EAAKS,cACJ,SAACxB,EAAD,CACEyB,IAAG,UAbJ,uCAaI,OAAcV,EAAKS,cACtBE,IAAG,UAAKX,EAAKO,kBAGf,SAACtB,EAAD,CACEyB,IAAI,+EACJC,IAAI,eAbUX,EAAKY,GADR,OAqBrB,SAACvB,EAAD,qDAIP,C,uKC1DDwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhD,0GAIA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAkDG,IAD1D,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBzB,GAAxB,iFACQoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oBAAsCqB,IAD9C,0GAIA,SAAelB,EAAtB,iDAAO,OAAP,oBAAO,WAA4BH,EAAS0B,GAArC,iFACQN,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAA8B0B,EAA9B,oBAAiDL,IADzD,0G","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCastWrap = styled.div``;\n\nexport const MovieCastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MovieCastItem = styled.li`\n  padding-bottom: 10px;\n  border-radius: 2px;\n  background-color: lightgrey;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const MovieCastImg = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const MovieCastTitle = styled.div`\n  text-align: center;\n`;\nexport const MovieCastName = styled.h2``;\nexport const MovieCastChar = styled.p``;\nexport const MovieCastEmpty = styled.h3`\n  color: red;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from '../../service/moviesApi';\nimport {\n  MovieCastWrap,\n  MovieCastList,\n  MovieCastItem,\n  MovieCastImg,\n  MovieCastTitle,\n  MovieCastName,\n  MovieCastChar,\n  MovieCastEmpty,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castsCard, setCastsCard] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieInfo(movieId, 'credits')\n        .then(res => {\n          setCastsCard(res.data.cast);\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }, [movieId]);\n\n  const imgURL = 'https://image.tmdb.org/t/p/original';\n  return (\n    <MovieCastWrap>\n      {castsCard.length ? (\n        <MovieCastList>\n          {castsCard.map(cast => (\n            <MovieCastItem key={cast.id}>\n              <MovieCastTitle>\n                <MovieCastName>{cast.original_name}</MovieCastName>\n                <MovieCastChar>Character : {cast.character}</MovieCastChar>\n              </MovieCastTitle>\n              {cast.profile_path ? (\n                <MovieCastImg\n                  src={`${imgURL}${cast.profile_path}`}\n                  alt={`${cast.original_name}`}\n                />\n              ) : (\n                <MovieCastImg\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n                  alt=\"no image\"\n                />\n              )}\n            </MovieCastItem>\n          ))}\n        </MovieCastList>\n      ) : (\n        <MovieCastEmpty>We don't have any cast for this movie</MovieCastEmpty>\n      )}\n    </MovieCastWrap>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = 'dd11de3b6d1b80ae04b06e4f9c4a9a97';\n\nexport async function getTrendMovies() {\n  return await axios.get(`trending/movie/day?api_key=${apiKey}`);\n}\n\nexport async function getSeachMovies(queryWord) {\n  return await axios.get(`search/movie?api_key=${apiKey}&query=${queryWord}`);\n}\n\nexport async function getMovie(movieId) {\n  return await axios.get(`movie/${movieId}?api_key=${apiKey}`);\n}\n\nexport async function getMovieInfo(movieId, subType) {\n  return await axios.get(`movie/${movieId}/${subType}?api_key=${apiKey}`);\n}\n"],"names":["MovieCastWrap","styled","MovieCastList","MovieCastItem","MovieCastImg","MovieCastTitle","MovieCastName","MovieCastChar","MovieCastEmpty","useState","castsCard","setCastsCard","movieId","useParams","useEffect","getMovieInfo","then","res","data","cast","catch","error","console","message","length","map","original_name","character","profile_path","src","alt","id","axios","apiKey","getTrendMovies","getSeachMovies","queryWord","getMovie","subType"],"sourceRoot":""}