{"version":3,"file":"static/js/884.42fd575b.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,C,+FC2DD,UArEqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAIAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAS,CACXM,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzBA,EAAAA,EAAAA,IAAA,UADkB,QAClB,YACuBN,EADvB,oBAFe,qCAIZO,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIE,KACpBN,EAAYK,EACb,IACAE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,QACrB,GACJ,CACF,GAAE,CAACd,IAWJ,OACE,4BACE,SAAC,KAAD,CAASe,GAAInB,EAAYoB,QAAzB,0BACCb,IACC,4BACE,gBAAKc,IAAG,UAjCD,uCAiCC,OAAcd,EAASe,aAAeC,IAAI,MAClD,0BAAOhB,EAASiB,kBAChB,4CAAoBjB,EAASkB,eAC7B,wCAAgBlB,EAASmB,aACzB,sCAlBU,WAChB,GAAInB,EAAU,CACZ,IAAMoB,EAAI,GAIV,OAHApB,EAASqB,OAAOC,SAAQ,SAAUC,GAChCH,EAAEI,KAAKD,EAAIE,KACZ,IACML,EAAEM,UACV,CACF,CAUqBC,UAGlB,qDACA,2BACE,yBACE,SAAC,KAAD,CAASf,GAAE,kBAAaf,EAAb,SAAX,qBAEF,yBACE,SAAC,KAAD,CAASe,GAAE,kBAAaf,EAAb,YAAX,2BAGJ,SAAC,EAAA+B,SAAD,CACEC,UACE,4BACE,SAAC,IAAD,IADF,wBAFJ,UAQE,SAAC,KAAD,QAIP,C","sources":["components/Loader/Loader.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\nimport { Suspense, useState, useRef, useEffect } from 'react';\nimport { useLocation, NavLink, Outlet, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [dataCard, setDataCard] = useState(null);\n\n  const imgURL = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    if (movieId) {\n      axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n      const apiKey = '6746b4dbb69b720741ecbdc7655d3557';\n      const typeQuery = 'movie';\n      axios\n        .get(`${typeQuery}/${movieId}?api_key=${apiKey}`)\n        .then(res => {\n          const dataArr = res.data;\n          setDataCard(dataArr);\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }, [movieId]);\n\n  const getGenres = () => {\n    if (dataCard) {\n      const a = [];\n      dataCard.genres.forEach(function (obj) {\n        a.push(obj.name);\n      });\n      return a.toString();\n    }\n  };\n  return (\n    <div>\n      <NavLink to={backLinkRef.current}>Back to Home</NavLink>\n      {dataCard && (\n        <div>\n          <img src={`${imgURL}${dataCard.poster_path}`} alt=\"\" />\n          <span>{dataCard.original_title}</span>\n          <span>User Score : {dataCard.popularity}</span>\n          <span>Overview {dataCard.overview}</span>\n          <span>Genres {getGenres()}</span>\n        </div>\n      )}\n      <span>Aditional information</span>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense\n        fallback={\n          <div>\n            <Loader />\n            Loading subpage...\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useState","dataCard","setDataCard","useEffect","axios","then","res","dataArr","data","catch","error","console","message","to","current","src","poster_path","alt","original_title","popularity","overview","a","genres","forEach","obj","push","name","toString","getGenres","Suspense","fallback"],"sourceRoot":""}