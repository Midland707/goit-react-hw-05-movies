{"version":3,"file":"static/js/884.794710d9.chunk.js","mappings":"sMA6DA,UAzDqB,WAAO,IAAD,IACnBA,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAIAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAS,CACXM,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzBA,EAAAA,EAAAA,IAAA,UADkB,QAClB,YAA0BN,EAA1B,oBAFe,qCAEwCO,MAAK,SAAAC,GAC1D,IAAMC,EAAUD,EAAIE,KACpBN,EAAYK,EACb,GACF,CACF,GAAE,CAACT,IAWJ,OACE,4BACE,SAAC,KAAD,CAASW,GAAIf,EAAYgB,QAAzB,0BACCT,IACC,4BACE,gBAAKU,IAAG,UA5BD,uCA4BC,OAAcV,EAASW,aAAeC,IAAI,MAClD,0BAAOZ,EAASa,kBAChB,4CAAoBb,EAASc,eAC7B,wCAAgBd,EAASe,aACzB,sCAlBU,WAChB,GAAIf,EAAU,CACZ,IAAMgB,EAAI,GAIV,OAHAhB,EAASiB,OAAOC,SAAQ,SAAUC,GAChCH,EAAEI,KAAKD,EAAIE,KACZ,IACML,EAAEM,UACV,CACF,CAUqBC,UAGlB,qDACA,2BACE,yBACE,SAAC,KAAD,CAASf,GAAE,kBAAaX,EAAb,SAAX,qBAEF,yBACE,SAAC,KAAD,CAASW,GAAE,kBAAaX,EAAb,YAAX,2BAGJ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Suspense, useState, useRef, useEffect } from 'react';\nimport { useLocation, NavLink, Outlet, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [dataCard, setDataCard] = useState(null);\n\n  const imgURL = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    if (movieId) {\n      axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n      const apiKey = '6746b4dbb69b720741ecbdc7655d3557';\n      const typeQuery = 'movie';\n      axios.get(`${typeQuery}/${movieId}?api_key=${apiKey}`).then(res => {\n        const dataArr = res.data;\n        setDataCard(dataArr);\n      });\n    }\n  }, [movieId]);\n\n  const getGenres = () => {\n    if (dataCard) {\n      const a = [];\n      dataCard.genres.forEach(function (obj) {\n        a.push(obj.name);\n      });\n      return a.toString();\n    }\n  };\n  return (\n    <div>\n      <NavLink to={backLinkRef.current}>Back to Home</NavLink>\n      {dataCard && (\n        <div>\n          <img src={`${imgURL}${dataCard.poster_path}`} alt=\"\" />\n          <span>{dataCard.original_title}</span>\n          <span>User Score : {dataCard.popularity}</span>\n          <span>Overview {dataCard.overview}</span>\n          <span>Genres {getGenres()}</span>\n        </div>\n      )}\n      <span>Aditional information</span>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useState","dataCard","setDataCard","useEffect","axios","then","res","dataArr","data","to","current","src","poster_path","alt","original_title","popularity","overview","a","genres","forEach","obj","push","name","toString","getGenres","Suspense","fallback"],"sourceRoot":""}