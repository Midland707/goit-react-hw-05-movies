{"version":3,"file":"static/js/387.157f5b76.chunk.js","mappings":"yPAEaA,EAAoBC,EAAAA,GAAAA,IAAH,sBACjBC,EAAmBD,EAAAA,GAAAA,GAAH,sBAChBE,EAAmBF,EAAAA,GAAAA,GAAH,6CAGhBG,EAAmBH,EAAAA,GAAAA,GAAH,sBAChBI,EAAoBJ,EAAAA,GAAAA,EAAH,6CAGjBK,EAAmBL,EAAAA,GAAAA,GAAH,uC,SCsC7B,EArCgB,WACd,OAAsCM,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAaH,EAAS,WACnBI,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIE,KACpBR,EAAeO,EAAQE,QACxB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,QACrB,GAEN,GAAE,CAACZ,KAGF,SAACV,EAAD,UACGQ,EAAYe,QACX,SAACrB,EAAD,UACGM,EAAYgB,KAAI,SAAAC,GAAM,OACrB,UAACtB,EAAD,YACE,UAACC,EAAD,sBAA2BqB,EAAOC,WAClC,SAACrB,EAAD,UAAoBoB,EAAOE,YAFNF,EAAOG,GADT,OAQzB,SAACtB,EAAD,wDAMP,C,uKC7CDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhD,0GAIA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQJ,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAkDG,IAD1D,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBxB,GAAxB,iFACQmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,IAD9C,0GAIA,SAAejB,EAAtB,iDAAO,OAAP,oBAAO,WAA4BH,EAASyB,GAArC,iFACQN,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,YAA8ByB,EAA9B,oBAAiDL,IADzD,0G","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesReviewsWrap = styled.div``;\nexport const MovieReviewsList = styled.ul``;\nexport const MovieReviewsItem = styled.li`\n  margin-top: 20px;\n`;\nexport const MovieReviewAutor = styled.h2``;\nexport const MovieReviewReview = styled.p`\n  margin-top: 10px;\n`;\nexport const MovieReviewEmpty = styled.h3`\n  color: red;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from '../../service/moviesApi';\nimport {\n  MoviesReviewsWrap,\n  MovieReviewsList,\n  MovieReviewsItem,\n  MovieReviewAutor,\n  MovieReviewReview,\n  MovieReviewEmpty,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsCard, setReviewsCard] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieInfo(movieId, 'reviews')\n        .then(res => {\n          const dataArr = res.data;\n          setReviewsCard(dataArr.results);\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }, [movieId]);\n\n  return (\n    <MoviesReviewsWrap>\n      {reviewsCard.length ? (\n        <MovieReviewsList>\n          {reviewsCard.map(review => (\n            <MovieReviewsItem key={review.id}>\n              <MovieReviewAutor>Autor : {review.author}</MovieReviewAutor>\n              <MovieReviewReview>{review.content}</MovieReviewReview>\n            </MovieReviewsItem>\n          ))}\n        </MovieReviewsList>\n      ) : (\n        <MovieReviewEmpty>\n          We don't have any reviews for this movie\n        </MovieReviewEmpty>\n      )}\n    </MoviesReviewsWrap>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '6746b4dbb69b720741ecbdc7655d3557';\n\nexport async function getTrendMovies() {\n  return await axios.get(`trending/movie/day?api_key=${apiKey}`);\n}\n\nexport async function getSeachMovies(queryWord) {\n  return await axios.get(`search/movie?api_key=${apiKey}&query=${queryWord}`);\n}\n\nexport async function getMovie(movieId) {\n  return await axios.get(`movie/${movieId}?api_key=${apiKey}`);\n}\n\nexport async function getMovieInfo(movieId, subType) {\n  return await axios.get(`movie/${movieId}/${subType}?api_key=${apiKey}`);\n}\n"],"names":["MoviesReviewsWrap","styled","MovieReviewsList","MovieReviewsItem","MovieReviewAutor","MovieReviewReview","MovieReviewEmpty","useState","reviewsCard","setReviewsCard","movieId","useParams","useEffect","getMovieInfo","then","res","dataArr","data","results","catch","error","console","message","length","map","review","author","content","id","axios","apiKey","getTrendMovies","getSeachMovies","queryWord","getMovie","subType"],"sourceRoot":""}